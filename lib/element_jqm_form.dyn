{#def]jqmForm[#,]id[][#,]data-role[listview]
[#>]<form><ul data-role="#{data-role}" id=":{#{=id}.strip}" data-inset="true">
[#yield]default
[#>]</ul></form>
[#def}

{#def]jqmInput[#,]id[][#,]title[][#,]type[text]
[#>][<li class="ui-field-contain">
    <label for="#{id}">#{title}</label>
    <input type="#{type}" name="#{id}" id="#{id}" value="" data-clear-btn="true">
</li>]
[#def}

{#def]jqmTextArea[#,]id[][#,]title[][#,]cols[40][#,]rows[8]
[#>][<li class="ui-field-contain">
    <label for="#{id}">#{title}</label>
    <textarea cols="#{cols}" rows="#{rows}" name="#{id}" id="#{id}"></textarea>
</li>]
[#def}

{#def]jqmFlip[#,]id[][#,]title[][#,]on[<<value[on]<<title[On]][#,]off[<<value[off]<<title[Off]]
[#>][<li class="ui-field-contain">
    <label for="#{id}">#{title}</label>
    <select name="#{id}" id="#{id}" data-role="slider">
        <option value="#{off.value}">#{off.title}</option>
        <option value="#{on.value}">#{on.title}</option>
    </select>
</li>]
[#def}

{#def]jqmSlider[#,]id[][#,]title[][#,]value[<<current[0]<<min[0]<<max[100]]
[#>][<li class="ui-field-contain">
    <label for="#{id}">#{title}</label>
    <input type="range" name="#{id}" id="#{id}" value="#{value.current}" min="#{value.min}" max="#{value.max}" data-highlight="true">
</li>]
[#def}

{#def]jqmSelectChoice[#,]id[][#,]title[][#,]choices[][#,]native[false]
[#>]<li class="ui-field-contain">
  <label for="#{id}">#{title}</label>
  <select name="#{id}" id="#{id}" data-native-menu="#{native}">
[#rb>]choices=#{=choices}.strip.split(/[\|\n]/)
choices.each do |e| #
  key,val=e.dup.strip,nil
  if key =~ /^([^\(]*)\(([^\(\)]*)\)$/
    key=$1.strip
    val=$2
  end
  {#>]    <option value=":{key}">:{val}</option>[#nl][#>}
end
[#>][  </select>
</li>]
[#def}

{#def]jqmButtonSet[#,]id[][#,]nb[2][#,]title[Cancel,Submit][#,]on.click[][#,]react[]
[#>]<li class="ui-body ui-body-a">
[#rb<]nb=#{nb}
type=["solo","a","b","c","d"][nb-1]
titles=#{=title}.split(",").map{|e| e.strip}
on_click=[]
[#>]  <fieldset class="ui-grid-:{type}">
[#rb>]
(0...nb).each do |i| #
  bl=["a","b","c","d","e"][i]
  id=#{=id}.strip+"-"+bl
  res,js,react={id: id},nil,nil
  res[:js]=js if (js=extract_var("on.click."+bl))
  res[:react]=react if (react=extract_var(key="react."+bl))
  on_click << res if js or react
  {#>]    <div class="ui-block-:{bl}" id=":{id}"><button type="button" class="ui-btn ui-corner-all ui-btn-a">:{titles[i]}</button></div>[#nl][#>}
end
Dyndoc.warn "on-click",on_click
[#>][  </fieldset>
</li>]
[#=]js_code_post[$( document ).on( "pagecreate", function() {]
[#rb<]on_click.each do |h| #

	{#<][#+]js_code_post[
    $(document).on('click',"#:{h[:id]}",function () {
    {#if]:{!h[:js].nil?}[#>]:{h[:js]};[#if}
    {#if]:{!h[:react].nil?}[#>]{#ReactiveElementUpdate]:{h[:react]}[#}[#if}
  });][#<}

end

[#+]js_code_post[
});]
[#rb<]LayoutMngr << [:js_code,#{=js_code_post}]
[#def}
